{"ast":null,"code":"import _toConsumableArray from \"/Users/carlosarico/Desktop/_GIT/prod/coinmarketcrypto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/carlosarico/Desktop/_GIT/prod/coinmarketcrypto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/carlosarico/Desktop/_GIT/prod/coinmarketcrypto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/carlosarico/Desktop/_GIT/prod/coinmarketcrypto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carlosarico/Desktop/_GIT/prod/coinmarketcrypto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/carlosarico/Desktop/_GIT/prod/coinmarketcrypto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/carlosarico/Desktop/_GIT/prod/coinmarketcrypto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/carlosarico/Desktop/_GIT/prod/coinmarketcrypto/src/components/App.js\";\nimport React, { Component } from 'react';\nimport chart from '../logos/chart.png';\nimport btc from '../logos/btc.png';\nimport eth from '../logos/eth.png';\nimport link from '../logos/link.png';\nimport ada from '../logos/ada.png';\nimport xmr from '../logos/xmr.png';\nimport yfi from '../logos/yfi.png';\nimport lend from '../logos/lend.png';\nimport comp from '../logos/comp.png';\nimport uni from '../logos/uni.png';\nimport gnt from '../logos/gnt.png';\n\nvar axios = require(\"axios\");\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.getData();\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }() //getting&setting cryptocurrencies data\n\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.getData = function () {\n      //getting ccurencies data\n      axios({\n        \"method\": \"GET\",\n        \"url\": \"https://coinpaprika1.p.rapidapi.com/tickers\",\n        \"headers\": {\n          \"content-type\": \"application/octet-stream\",\n          \"x-rapidapi-host\": \"coinpaprika1.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"ab4f1544f2mshabf00aceae5e900p158316jsnba5169b1b232\",\n          \"useQueryString\": true\n        }\n      }).then(function (response) {\n        //assign all ccurencies data from API into variable\n        var coins = response.data; //declare ccurencies and their imgs\n\n        var ccArray = [{\n          name: 'Bitcoin',\n          img: btc\n        }, {\n          name: 'Ethereum',\n          img: eth\n        }, {\n          name: 'Chainlink',\n          img: link\n        }, {\n          name: 'Cardano',\n          img: ada\n        }, {\n          name: 'Monero',\n          img: xmr\n        }, {\n          name: 'yearn.finance',\n          img: yfi\n        }, {\n          name: 'Aave',\n          img: lend\n        }, {\n          name: 'Compound',\n          img: comp\n        }, {\n          name: 'Uniswap',\n          img: uni\n        }, {\n          name: 'Golem',\n          img: gnt\n        }];\n        /* search for chosen cryptocurrencies, then add them to the state */\n        //get ccurency from ccArray \n\n        for (var j = 0; j < ccArray.length; j++) {\n          //get ccurrency from API\n          for (var i = 0; i < coins.length; i++) {\n            //if current ccurrency API == current ccurrency from ccArray\n            if (coins[i].name === ccArray[j].name) {\n              //add img to the ccurrency API data\n              coins[i]['img'] = ccArray[j].img; //set state with updated data\n\n              _this.setState({\n                ccData: [].concat(_toConsumableArray(_this.state.ccData), [coins[i]])\n              });\n            }\n          }\n        } //sort ccurrencies by rank\n\n\n        _this.setState({\n          ccData: _this.state.ccData.sort(function (a, b) {\n            return a.rank - b.rank;\n          })\n        });\n      }).catch(function (error) {\n        console.log(error);\n      }); //getting ccurrency market data\n\n      axios({\n        \"method\": \"GET\",\n        \"url\": \"https://coinpaprika1.p.rapidapi.com/global\",\n        \"headers\": {\n          \"content-type\": \"application/octet-stream\",\n          \"x-rapidapi-host\": \"coinpaprika1.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"ab4f1544f2mshabf00aceae5e900p158316jsnba5169b1b232\",\n          \"useQueryString\": true\n        }\n      }).then(function (response) {\n        var globalData = response.data;\n\n        _this.setState({\n          loading: true\n        }); //set state with updated global ccurency market cap\n\n\n        _this.setState({\n          ccGlobalMcap: globalData.market_cap_usd\n        });\n\n        _this.setState({\n          loading: false\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.state = {\n      ccData: [],\n      ccGlobalMcap: '',\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow text-monospace text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        href: \"http://www.dappuniversity.com/bootcamp\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: chart,\n        width: \"30\",\n        height: \"30\",\n        className: \"d-inline-block align-top\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }), \"Crypt0 Track3r\"), this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 33\n        }\n      }, \"Loading...\") : /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      }, \"global crypto market:\"), \"\\xA0$\", /*#__PURE__*/React.createElement(\"a\", {\n        className: \"text-white\",\n        href: \"https://coinpaprika.com/market-overview/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }, this.state.ccGlobalMcap.toLocaleString(\"fr-CH\")), \"\\xA0\")), \"\\xA0\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5 w-50 p-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-striped table-hover table-fixed table-bordered text-monospace\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"caption\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, \"Data Source:\", /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: \"https://coinpaprika.com/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 23\n        }\n      }, \"coinpaprika\")), /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-dark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      }, \"Rank\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }\n      }, \"Logo\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }\n      }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }\n      }, \"Market Cap\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 23\n        }\n      }, this.state.ccData.map(function (data, key) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 31\n          }\n        }, data.rank), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: data.img,\n          width: \"25\",\n          height: \"25\",\n          className: \"d-inline-block align-top\",\n          alt: \"\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 35\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          href: \"https://coinpaprika.com/coin/\" + data.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 35\n          }\n        }, data.name)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 31\n          }\n        }, \"$\", data.quotes.USD.price.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 31\n          }\n        }, \"$\", data.quotes.USD.market_cap.toLocaleString(\"fr-CH\")));\n      })))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/carlosarico/Desktop/_GIT/prod/coinmarketcrypto/src/components/App.js"],"names":["React","Component","chart","btc","eth","link","ada","xmr","yfi","lend","comp","uni","gnt","axios","require","App","getData","props","then","response","coins","data","ccArray","name","img","j","length","i","setState","ccData","state","sort","a","b","rank","catch","error","console","log","globalData","loading","ccGlobalMcap","market_cap_usd","toLocaleString","map","key","id","quotes","USD","price","toFixed","market_cap"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport chart from '../logos/chart.png';\nimport btc from '../logos/btc.png';\nimport eth from '../logos/eth.png';\nimport link from '../logos/link.png';\nimport ada from '../logos/ada.png';\nimport xmr from '../logos/xmr.png';\nimport yfi from '../logos/yfi.png';\nimport lend from '../logos/lend.png';\nimport comp from '../logos/comp.png';\nimport uni from '../logos/uni.png';\nimport gnt from '../logos/gnt.png';\n\nconst axios = require(\"axios\");\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.getData()\n  }\n\n  //getting&setting cryptocurrencies data\n  getData = () => {\n    //getting ccurencies data\n    axios({\n      \"method\":\"GET\",\n      \"url\":\"https://coinpaprika1.p.rapidapi.com/tickers\",\n      \"headers\":{\n        \"content-type\":\"application/octet-stream\",\n        \"x-rapidapi-host\":\"coinpaprika1.p.rapidapi.com\",\n        \"x-rapidapi-key\":\"ab4f1544f2mshabf00aceae5e900p158316jsnba5169b1b232\",\n        \"useQueryString\":true\n      }\n    })\n    .then((response)=>{\n      //assign all ccurencies data from API into variable\n      const coins = response.data\n      //declare ccurencies and their imgs\n      const ccArray = [\n        { name: 'Bitcoin', img: btc },\n        { name: 'Ethereum', img: eth },\n        { name: 'Chainlink', img: link },\n        { name: 'Cardano', img: ada },\n        { name: 'Monero', img: xmr },\n        { name: 'yearn.finance', img: yfi },\n        { name: 'Aave', img: lend },\n        { name: 'Compound', img: comp },\n        { name: 'Uniswap', img: uni },\n        { name: 'Golem', img: gnt }\n      ]\n\n      /* search for chosen cryptocurrencies, then add them to the state */\n      //get ccurency from ccArray \n      for(let j=0; j<ccArray.length; j++){\n        //get ccurrency from API\n        for (let i=0; i<coins.length; i++){\n          //if current ccurrency API == current ccurrency from ccArray\n          if(coins[i].name === ccArray[j].name){\n            //add img to the ccurrency API data\n            coins[i]['img'] = ccArray[j].img\n            //set state with updated data\n            this.setState({\n              ccData: [...this.state.ccData, coins[i]]\n            })\n          }\n        }\n      }\n      //sort ccurrencies by rank\n      this.setState({\n        ccData: this.state.ccData.sort((a,b) => a.rank-b.rank)\n      })\n    })\n    .catch((error)=>{\n      console.log(error)\n    })\n\n    //getting ccurrency market data\n    axios({\n      \"method\":\"GET\",\n      \"url\":\"https://coinpaprika1.p.rapidapi.com/global\",\n      \"headers\":{\n      \"content-type\":\"application/octet-stream\",\n      \"x-rapidapi-host\":\"coinpaprika1.p.rapidapi.com\",\n      \"x-rapidapi-key\":\"ab4f1544f2mshabf00aceae5e900p158316jsnba5169b1b232\",\n      \"useQueryString\":true\n      }\n    })\n    .then((response)=>{\n      const globalData = response.data\n      this.setState({ loading: true })\n      //set state with updated global ccurency market cap\n      this.setState({ ccGlobalMcap: globalData.market_cap_usd })\n      this.setState({ loading: false })\n    })\n    .catch((error)=>{\n      console.log(error)\n    })\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      ccData: [],\n      ccGlobalMcap: '',\n      loading: true\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow text-monospace text-white\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            href=\"http://www.dappuniversity.com/bootcamp\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img src={chart} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\n            Crypt0 Track3r\n          </a>\n          {this.state.loading ? <div id=\"loader\" className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">Loading...</div> :\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n              <small>global crypto market:</small>&nbsp;$\n              <a\n                className=\"text-white\"\n                href=\"https://coinpaprika.com/market-overview/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {(this.state.ccGlobalMcap).toLocaleString(\"fr-CH\")}\n              </a>&nbsp;\n            </li>\n          }\n        </nav>\n        &nbsp;\n          <div className=\"container-fluid mt-5 w-50 p-3\">\n            <div className=\"row\">\n              <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n                  <table className=\"table table-striped table-hover table-fixed table-bordered text-monospace\">\n                    <caption>Data Source: \n                      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://coinpaprika.com/\">coinpaprika</a>\n                    </caption>\n                    <thead className=\"thead-dark\">\n                      <tr>\n                        <th scope=\"col\">Rank</th>\n                        <th scope=\"col\">Logo</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Price</th>\n                        <th scope=\"col\">Market Cap</th>\n                      </tr>\n                    </thead>\n                      <tbody>\n                        {this.state.ccData.map((data, key) => {\n                          return(\n                            <tr key={key}>\n                              <td>{data.rank}</td>\n                              <td><img src={data.img} width=\"25\" height=\"25\" className=\"d-inline-block align-top\" alt=\"\" /></td>\n                              <td><a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://coinpaprika.com/coin/\" + data.id}>{data.name}</a></td>\n                              <td>${(data.quotes.USD.price).toFixed(2)}</td>\n                              <td>${(data.quotes.USD.market_cap).toLocaleString(\"fr-CH\")}</td>\n                            </tr>\n                          )\n                        })}\n                      </tbody>\n                  </table>\n              </main>\n            </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}